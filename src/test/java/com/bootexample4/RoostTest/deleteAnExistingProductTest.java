/*
Test generated by RoostGPT for test products-integration-rest-assured using AI Type Azure Open AI and AI Model roost-gpt4-32k

{
  background: null,
  rule: null,
  scenario: 'Delete an existing product\r\n' +
    '    Given there is an existing product with ID 1\r\n' +
    '    When the client sends a DELETE request to "/api/products/1"\r\n' +
    '    Then the response status code should be 200\r\n' +
    '    And the product with ID 1 should no longer exist',
  title: 'Delete an existing product'
}

*/
package com.bootexample4.RoostTest;

import io.restassured.RestAssured;
import io.restassured.config.SSLConfig;
import io.restassured.http.ContentType;
import io.restassured.response.ValidatableResponse;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;

import static io.restassured.RestAssured.*;
import static org.junit.jupiter.api.Assertions.assertEquals;

@ExtendWith(OrderedTestExecutionExtension.class)
public class deleteAnExistingProductTest {

    private static final String ROOST_SERVER_URL = System.getenv("ROOST_SERVER_URL");

    @Test
    void deleteAnExistingProduct() {

        // Given there is an existing product with ID 1
        RestAssured.given()
                .baseUri(ROOST_SERVER_URL)
                .basePath("/products/1")
                .config(config().sslConfig(new SSLConfig().allowAllHostnames()))
                .contentType(ContentType.JSON)
        .when()
                .get()
        .then()
                .assertThat()
                .statusCode(200);

        // When the client sends a DELETE request to "/api/products/1"
        ValidatableResponse validatableResponse = RestAssured.given()
                .baseUri(ROOST_SERVER_URL)
                .basePath("/products/1")
                .config(config().sslConfig(new SSLConfig().allowAllHostnames()))
                .contentType(ContentType.JSON)
        .when()
                .delete()
        .then();

        // Then the response status code should be 200
        validatableResponse.assertThat().statusCode(200);

        // And the product with ID 1 should no longer exist
        String deletedProductIdResponse = validatableResponse.extract().asString();
        assertEquals("Product deleted", deletedProductIdResponse);

        RestAssured.given()
                .baseUri(ROOST_SERVER_URL)
                .basePath("/products/1")
                .config(config().sslConfig(new SSLConfig().allowAllHostnames()))
                .contentType(ContentType.JSON)
        .when()
                .get()
        .then()
                .assertThat()
                .statusCode(404);

    }
}
