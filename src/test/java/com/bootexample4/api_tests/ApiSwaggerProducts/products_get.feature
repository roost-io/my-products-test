# ********RoostGPT********

# Test generated by RoostGPT for test API_Karate_DB_DBRX using AI Type  and AI Model 
# 
# Feature file generated for /products_get for http method type GET 
# RoostTestHash=70199667a6
# 
# 

# ********RoostGPT********
Feature: Testing Products API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase

  Scenario Outline: Get all products successfully
    Given path 'products'
    When method get
    Then status 200
    And match response == '<response>'

    Examples:
      | read('products_get.csv') |

  Scenario: Get all products with unauthorized
    Given path 'products'
    When method get
    Then status 401

  Scenario: Get all products with bad request
    Given path 'products'
    When method get
    Then status 400

  Scenario: Post a new product with unauthorized
    Given path 'products'
    And request { "name": "banana", "description": "banana", "price": 60 }
    When method post
    Then status 401

  Scenario: Post a new product with bad request
    Given path 'products'
    And request { "name": "banana", "description": "banana", "price": "sixty" }
    When method post
    Then status 400

  Scenario: Post a new product successfully
    Given path 'products'
    And request { "name": "banana", "description": "banana", "price": 60 }
    When method post
    Then status 201
    And match response == { "id": '#number', "name": "banana", "description": "banana", "price": 60 }
# Add more scenarios for put and delete methods or edge cases based on the API specification
# Assertions for headers, response body properties, schema validation, etc.
# See the 'RESPONSE VALIDATION' section in the prompt
