# ********RoostGPT********

# Test generated by RoostGPT for test roost-io-my-products-api using AI Type  and AI Model 
# 
# Feature file generated for /products/{productId}_get for http method type GET 
# RoostTestHash=ab8efa24ed
# 
# 

# ********RoostGPT********
Feature: Test /products/{productId} endpoint

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def auth_token = karate.properties['AUTH_TOKEN']
    * configure headers = { Authorization: '#(auth_token)' }

  Scenario Outline: Verify that GET /products/{productId} returns correct product details
    Given path '/products', '<productId>'
    When method get
    Then status 200
    And match response contains {id:'#number', name:'#string', description:'#string', price:'#number'}
    And match response.id == '<productId>'
    And match response.name == '<name>'
    And match response.description == '<description>'
    And match response.price == '<price>'

    Examples:
      | read('products_productId_get.csv') |

  Scenario: Verify that GET /products/{productId} returns 404 for non-existent product
    Given path '/products', '999999'
    When method get
    Then status 404
