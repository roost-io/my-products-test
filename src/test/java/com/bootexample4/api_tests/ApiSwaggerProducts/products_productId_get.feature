# ********RoostGPT********

# Test generated by RoostGPT for test API_Karate_DB_DBRX using AI Type  and AI Model 
# 
# Feature file generated for /products/{productId}_get for http method type GET 
# RoostTestHash=ab8efa24ed
# 
# 

# ********RoostGPT********
Feature: Test product API
  TestSteps:  
    background
    getProductById
    getProductByName
    getProductByDescription
    getProductByPrice
  Scenario: Test getting product by ID
    Given: path '/products/' + productId
    And headers:  'Authorization': 'Bearer ' + authToken
    When: method get
    Then: status code is 200
    And: response.id == "#number'
    And: response.name == '<name>'
    And: response.description == '<description>'
    And: response.price == '#number'
  Feature: Test getting product by name
    Scenario: Test getting product by name
      Given: path '/products/' + name
      And headers:  'Authorization': 'Bearer ' + authToken
      When: method get
      Then: status code is 200
      And: response.id == '#number'
      And: response.name == '<name>'
      And: response.description == '<description>'
      And: response.price == '#number'
  Feature: Test getting product by description
    Scenario: Test getting product by description
      Given: path '/products/' + description
      And headers:  'Authorization': 'Bearer ' + authToken
      When: method get
      Then: status code is 200
      And: response.id == '#number'
      And: response.name == '<name>'
      And: response.description == '<description>'
      And: response.price == '#number'
  Feature: Test getting product by price
    Scenario: Test getting product by price
      Given: path '/products/' + price
      And headers:  'Authorization': 'Bearer ' + authToken
      When: method get
      Then: status code is 200
      And: response.id == '#number'
      And: response.name == '<name>'
      And: response.description == '<description>'
      And: response.price == '#number'
