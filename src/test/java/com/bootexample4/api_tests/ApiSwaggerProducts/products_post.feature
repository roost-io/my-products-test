# ********RoostGPT********

# Test generated by RoostGPT for test roost-io-my-products-api using AI Type  and AI Model 
# 
# Feature file generated for /products_post for http method type POST 
# RoostTestHash=dcd186097b
# 
# 

# ********RoostGPT********
Feature: Products API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']
    * def createProductPayload = function(data) { return { id: data[0], name: data[1], description: data[2], price: data[3] } }

  Scenario Outline: Verify the creation of a new product
    Given path '/products'
    And request createProductPayload(<data>)
    And header Authorization = authToken
    When method post
    Then status 200
    And match response == { id: '#integer', name: '#string', description: '#string', price: '#integer' }
    And match response.id == '<data[0]>'
    And match response.name == '<data[1]>'
    And match response.description == '<data[2]>'
    And match response.price == '<data[3]>'

    Examples:
      | read('products_post.csv') |

  Scenario Outline: Verify invalid input error during product creation
    Given path '/products'
    And request createProductPayload(<data>)
    And header Authorization = authToken
    When method post
    Then status 405

    Examples:
      | data                                              |
      | [null, 'apple', 'description of the product', 20] |
      | [10, null, 'description of the product', 20]      |
      | [10, 'apple', null, 20]                           |
      | [10, 'apple', 'description of the product', null] |
