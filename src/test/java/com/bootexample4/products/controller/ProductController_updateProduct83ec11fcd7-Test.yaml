# Test generated by RoostGPT for test july4offbusinessdemo using AI Model gpt

config:
  target: "http://api.example.com"
  phases:
    - duration: 60
      arrivalRate: 20

scenarios:
  - name: "Successful API request"
    flow:
      - post:
          url: "/product/1"
          json:
            name: "Test Product"
            description: "This is a test product"
            price: 10.99
          headers:
            Content-Type: "application/json"
          capture:
            json: "$"
            as: "response"
          expect:
            - statusCode: 200
            - equals:
                - "{{ response.name }}"
                - "Test Product"
            - equals:
                - "{{ response.description }}"
                - "This is a test product"
            - equals:
                - "{{ response.price }}"
                - 10.99

  - name: "API request with validation failure"
    flow:
      - post:
          url: "/product/1"
          json:
            name: ""
            description: ""
            price: ""
          headers:
            Content-Type: "application/json"
          expect:
            - statusCode: 400

  - name: "API request with edge case"
    flow:
      - post:
          url: "/product/1"
          json:
            name: "Test Product with Special Characters: !@#$%^&*()"
            description: "This is a test product with a very long description. This description is so long that it might break something in the system. It contains multiple sentences and paragraphs. It also contains special characters like !@#$%^&*()."
            price: 9999999999.99
          headers:
            Content-Type: "application/json"
          capture:
            json: "$"
            as: "response"
          expect:
            - statusCode: 200
            - equals:
                - "{{ response.name }}"
                - "Test Product with Special Characters: !@#$%^&*()"
            - equals:
                - "{{ response.description }}"
                - "This is a test product with a very long description. This description is so long that it might break something in the system. It contains multiple sentences and paragraphs. It also contains special characters like !@#$%^&*()."
            - equals:
                - "{{ response.price }}"
                - 9999999999.99
